The ``0-add_integer`` module
======================

Using ``add_integer``
-------------------

This is an example text file in reStructuredText format.  First import
``add_integer`` from the ``0-add_integer`` module:

    >>> add_integer = __import__('0-add_integer').add_integer

Trying simple add:

    >>> add_integer(3, 4)
    7

Trying with 1 argument (to see if b = 98 works):

    >>> add_integer(2)
    100

Trying with no arguments:

    >>> add_integer()
    Traceback (most recent call last):
    ...
    TypeError: add_integer() missing 1 required positional argument: 'a'

Trying with float and integers values:

    >>> add_integer(2.6, 3)
    5

Trying with one argument as a type that's not float or integer:

    >>> add_integer("1", 5)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

Trying float overflow:

    >>> add_integer(3, float('inf'))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

Trying from casting int():

    >>> add_integer(int("33"), 7)
    40

Trying Not a Number:

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer